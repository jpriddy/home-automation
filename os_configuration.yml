---
- name: OS Config
  gather_facts: yes
  hosts: all
  become: yes
  tasks:
  
#    - name: Import gpg keys for fedora repos...
#      rpm_key:
#        key: "{{ item }}"
#        state: present
#      loop:
#        - "https://rpmfusion.org/keys?action=AttachFile&do=get&target=RPM-GPG-KEY-rpmfusion-nonfree-fedora-2020"
#        - "https://rpmfusion.org/keys?action=AttachFile&do=get&target=RPM-GPG-KEY-rpmfusion-free-fedora-2020"
#      when: "'Fedora' in ansible_distribution"
      
#    - name: Import gpg keys for all repos...
#      rpm_key:
#        key: "{{ item }}"
#        state: present
#      loop:
#        - "https://downloads.1password.com/linux/keys/1password.asc"   
          
#    - name: ...setup repos for Fedora
#      dnf:
#        name: "https://download1.rpmfusion.org/free/fedora/rpmfusion-free-release-{{ ansible_facts['distribution_major_version'] }}.noarch.rpm,https://download1.rpmfusion.org/nonfree/fedora/rpmfusion-nonfree-release-{{ ansible_facts['distribution_major_version'] }}.noarch.rpm"
#        state: present
#      when: "'Fedora' in ansible_distribution"
   
    - name: Install some packages
      package:
        name: "{{ item }}"
        state: latest
      with_items:
        - bash-completion
        - mlocate
        - rsync
        - nmap
        - iperf3   ## need to configure this
        - tuned  ## need to configure thie

    - name: Use system role to configure timesync
      include_role:
        name: redhat.rhel_system_roles.timesync
      vars:
        timesync_ntp_servers:
          - hostname: firewall.jpriddy.com
            iburst: true       

    - name: Use system role to configure ssh server
      include_role:
        name: redhat.rhel_system_roles.sshd
      vars:
        sshd_config_owner: root
        sshd_config_group: root
        sshd_config_mode: 0600
        sshd_hostkey_owner: root
        sshd_hostkey_group: root
        sshd_hostkey_mode: 0600
        sshd:
          PermitRootLogin: yes
          X11Forwarding: yes
          GSSAPIAuthentication: yes
          ChallengeResponseAuthentication: yes
          AllowTcpForwarding: yes
 
    - name: Install guest agent if virtualized guest
      package:
        name: qemu-guest-agent
        state: present
      when: ansible_virtualization_role == "guest"
 
    - name: Start guest agent service if virtualized guest
      service:
        name: qemu-guest-agent
        state: started
      when: ansible_virtualization_role == "guest"
